# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#  push:
#    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runner:
        description: 'Runner labels'
        required: true
        default: '[ubuntu-latest]'
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug input
        run: |
          echo "${{ fromJSON(inputs.runner) }}"

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ fromJSON(inputs.runner) }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo 'Hello, build!'

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo 'Add other actions to build,'
          echo 'test, and deploy your project.'
          
  deployment:
    runs-on: ubuntu-latest
    environment: 
      name: feature
      url: https://github.com
    steps:
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: https://github.com
          environment: feature-123
          transient-environment: true
      - name: deploy
        run: 'echo "Hello, deployment! Secret: ${{ env.SOME_FEATURE_SECRET }}"'
      - name: Update deployment status
        if: always()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: ${{ job.status }}
